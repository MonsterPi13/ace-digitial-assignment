
Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  NotFoundError,
  decompressFromBase64,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions
} = require('./runtime/index')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.7.1
 * Query Engine version: 272861e07ab64f234d3ffc4094e32bd61775599c
 */
Prisma.prismaVersion = {
  client: "4.7.1",
  engine: "272861e07ab64f234d3ffc4094e32bd61775599c"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.NotFoundError = NotFoundError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}


  const path = require('path')

const { findSync } = require('./runtime')
const fs = require('fs')

// some frameworks or bundlers replace or totally remove __dirname
const hasDirname = typeof __dirname !== 'undefined' && __dirname !== '/'

// will work in most cases, ie. if the client has not been bundled
const regularDirname = hasDirname && fs.existsSync(path.join(__dirname, 'schema.prisma')) && __dirname

// if the client has been bundled, we need to look for the folders
const foundDirname = !regularDirname && findSync(process.cwd(), [
    "generated/client",
    "client",
], ['d'], ['d'], 1)[0]

const dirname = regularDirname || foundDirname || __dirname

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.HeroListScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  img_url: 'img_url',
  bio: 'bio',
  background_color: 'background_color'
});

exports.Prisma.PrizePoolScalarFieldEnum = makeEnum({
  id: 'id',
  participant: 'participant',
  place: 'place',
  prize: 'prize',
  date: 'date',
  region: 'region',
  annualEdition: 'annualEdition'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  id: 'id',
  provider_type: 'provider_type',
  provider_userId: 'provider_userId',
  username: 'username',
  avatar_url: 'avatar_url',
  html_url: 'html_url',
  created_at: 'created_at'
});
exports.Annual_edition = makeEnum({
  Ti11: 'Ti11',
  Ti10: 'Ti10',
  Ti9: 'Ti9',
  Ti8: 'Ti8',
  Ti7: 'Ti7',
  Ti6: 'Ti6',
  Ti5: 'Ti5',
  Ti4: 'Ti4',
  Ti3: 'Ti3',
  Ti2: 'Ti2',
  Ti1: 'Ti1'
});

exports.Porvider_type = makeEnum({
  github: 'github'
});

exports.Region_type = makeEnum({
  WEU: 'WEU',
  EEU: 'EEU',
  CN: 'CN',
  NA: 'NA',
  SA: 'SA',
  SEA: 'SEA'
});

exports.Prisma.ModelName = makeEnum({
  User: 'User',
  HeroList: 'HeroList',
  PrizePool: 'PrizePool'
});

const compressedDMMF = '='
const decompressedDMMF = decompressFromBase64(compressedDMMF)
// We are parsing 2 times, as we want independent objects, because
// DMMFClass introduces circular references in the dmmf object
const dmmf = JSON.parse(decompressedDMMF)
exports.Prisma.dmmf = JSON.parse(decompressedDMMF)

/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/ruanpeng/playground/ace-digital-assignment/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [],
    "previewFeatures": [
      "deno"
    ],
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../.env",
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "4.7.1",
  "engineVersion": "272861e07ab64f234d3ffc4094e32bd61775599c",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "dataProxy": true
}
config.document = dmmf
config.dirname = dirname

config.inlineSchema = 'Ly8gVGhpcyBpcyB5b3VyIFByaXNtYSBzY2hlbWEgZmlsZSwKLy8gbGVhcm4gbW9yZSBhYm91dCBpdCBpbiB0aGUgZG9jczogaHR0cHM6Ly9wcmlzLmx5L2QvcHJpc21hLXNjaGVtYQoKZ2VuZXJhdG9yIGNsaWVudCB7CiAgcHJvdmlkZXIgPSAicHJpc21hLWNsaWVudC1qcyIKICBwcmV2aWV3RmVhdHVyZXMgPSBbImRlbm8iXQogIG91dHB1dD0iLi4vZ2VuZXJhdGVkL2NsaWVudCIKfQoKZGF0YXNvdXJjZSBkYiB7CiAgcHJvdmlkZXIgPSAicG9zdGdyZXNxbCIKICB1cmwgICAgICA9IGVudigiREFUQUJBU0VfVVJMIikKfQoKZW51bSBQb3J2aWRlcl90eXBlIHsKICBnaXRodWIKfQoKZW51bSBSZWdpb25fdHlwZSB7CiAgV0VVCiAgRUVVCiAgQ04KICBOQQogIFNBCiAgU0VBCn0KCmVudW0gQW5udWFsX2VkaXRpb24gewogIFRpMTEKICBUaTEwCiAgVGk5CiAgVGk4CiAgVGk3CiAgVGk2CiAgVGk1CiAgVGk0CiAgVGkzCiAgVGkyCiAgVGkxCn0KCm1vZGVsIFVzZXIgewogIGlkICAgICAgICAgICAgICAgIEludCAgICAgICAgICAgICBAaWQgQGRlZmF1bHQoYXV0b2luY3JlbWVudCgpKQogIHByb3ZpZGVyX3R5cGUgICAgIFBvcnZpZGVyX3R5cGUKICBwcm92aWRlcl91c2VySWQgICBJbnQgICAgICAgICAgICAgQHVuaXF1ZQogIHVzZXJuYW1lICAgICAgICAgIFN0cmluZwogIGF2YXRhcl91cmwgICAgICAgIFN0cmluZwogIGh0bWxfdXJsICAgICAgICAgIFN0cmluZwogIGNyZWF0ZWRfYXQgICAgICAgIERhdGVUaW1lICAgICAgICBAZGVmYXVsdChub3coKSkKfQoKbW9kZWwgSGVyb0xpc3QgewogIGlkICAgICAgICAgICAgICAgIEludCAgICAgQGlkIEBkZWZhdWx0KGF1dG9pbmNyZW1lbnQoKSkKICBuYW1lICAgICAgICAgICAgICBTdHJpbmcKICBpbWdfdXJsICAgICAgICAgICBTdHJpbmcKICBiaW8gICAgICAgICAgICAgICBTdHJpbmcKICBiYWNrZ3JvdW5kX2NvbG9yICBTdHJpbmcKfQoKbW9kZWwgUHJpemVQb29sIHsKICBpZCAgICAgICAgICAgICAgICBJbnQgICAgIEBpZCBAZGVmYXVsdChhdXRvaW5jcmVtZW50KCkpCiAgcGFydGljaXBhbnQgICAgICAgU3RyaW5nCiAgcGxhY2UgICAgICAgICAgICAgSW50CiAgcHJpemUgICAgICAgICAgICAgSW50CiAgZGF0ZSAgICAgICAgICAgICAgRGF0ZVRpbWUKICByZWdpb24gICAgICAgICAgICBSZWdpb25fdHlwZQogIGFubnVhbEVkaXRpb24gICAgIEFubnVhbF9lZGl0aW9uCn0KCg=='
config.inlineSchemaHash = '405bde7af9f4b3b751f1e7c99c0ead603e6c263e8c9d81ea7e54eac866c753b8'

config.inlineDatasources = {
  "db": {
    "url": {
      "fromEnvVar": "DATABASE_URL",
      "value": null
    }
  }
}


const { warnEnvConflicts } = require('./runtime/index')

warnEnvConflicts({
    rootEnvPath: config.relativeEnvPaths.rootEnvPath && path.resolve(dirname, config.relativeEnvPaths.rootEnvPath),
    schemaEnvPath: config.relativeEnvPaths.schemaEnvPath && path.resolve(dirname, config.relativeEnvPaths.schemaEnvPath)
})

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

